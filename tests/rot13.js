const {performance}=require('perf_hooks');let s=performance.now();let f=require('fs');let i=()=>{let b=Buffer.alloc(1);f.readSync(0, b, 0, 1);return b.toString('utf8').charCodeAt(0)};let o=(c)=>process.stdout.write(String.fromCharCode(c));let m=new Int8Array(1048576);let p=0;m[p]--;m[p]=i();m[p]++;while(m[p]){m[p]--;while(m[p]){p++;p++;m[p]++;m[p]++;m[p]++;m[p]++;while(m[p]){p++;m[p]++;m[p]++;m[p]++;m[p]++;m[p]++;m[p]++;m[p]++;m[p]++;p--;m[p]--;}p--;m[p]++;p--;m[p]--;while(m[p]){p++;m[p]++;p++;m[p]++;p++;m[p]--;while(m[p]){p++;p++;p++;}p--;while(m[p]){while(m[p]){p++;m[p]++;p--;m[p]--;}p++;p++;m[p]++;p++;}p--;p--;p--;p--;p--;m[p]--;}}p++;p++;p++;while(m[p]){m[p]--;}m[p]++;p++;m[p]--;m[p]--;while(m[p]){m[p]--;while(m[p]){p--;m[p]--;p++;m[p]++;m[p]++;m[p]++;while(m[p]){m[p]--;}}}p--;while(m[p]){m[p]++;m[p]++;m[p]++;m[p]++;m[p]++;m[p]++;m[p]++;m[p]++;m[p]++;m[p]++;m[p]++;m[p]++;p--;while(m[p]){p++;m[p]--;while(m[p]){p++;m[p]++;p++;p++;}p++;while(m[p]){m[p]++;while(m[p]){p--;m[p]++;p++;m[p]--;}p++;m[p]++;p++;p++;}p--;p--;p--;p--;p--;m[p]--;}p++;p++;while(m[p]){p--;m[p]++;p++;m[p]--;}p++;while(m[p]){m[p]--;while(m[p]){m[p]--;p--;p--;while(m[p]){m[p]--;}p++;p++;}p--;p--;while(m[p]){p--;p--;m[p]--;p++;p++;m[p]--;}p++;p++;}p--;p--;while(m[p]){p--;p--;m[p]++;p++;p++;m[p]--;}}p--;while(m[p]){m[p]--;}p--;o(m[p]);while(m[p]){m[p]--;}p--;m[p]--;m[p]=i();m[p]++;}console.log('\nFinished in '+Math.floor((performance.now()-s)*100)/100+'ms. (Transpiled w/ perf by bftranspile)');